---
title: "自己动手写東方Project作弊器（一）"
categories: 折腾记录
tags:
- 東方Project
- 反汇编
---
很久没写程序了，甚至很久没和计算机代码打交道了。为了证明自己没被查水表，我就随便写点什么吧。

最近发现了[東方Project](https://zh.wikipedia.org/wiki/%E6%9D%B1%E6%96%B9Project)，不幸的是，由于天生手残，就连打Easy都有些吃力（除了永夜抄和辉针城）。作为一个猥琐大叔，就这样被萝莉们欺负，能爽吗？所以，为了把她们统统[推倒](http://cn.uncyclopedia.wikia.com/wiki/%E6%8E%A8%E5%80%92)，我要写东方的作弊器（修改器）了！

# 原理

如果想直接作弊的话，只要搜一下东方的修改器，或者装个金山游侠、Cheat Engine或Game Master，然后改数据就可以了。如果自己写修改器，其实也不难，因为东方正作，除了妖妖梦和永夜抄，那些参数的地址都是固定的，只要记住地址，把数据写进去就OK了。妖妖梦和永夜抄比较特殊，[下一篇文章](/2016/08/18/touhou-cheater-2/)再单独分析（其实也没什么太特殊的东西）。

修改器这种东西，用VB6写会比较简单。虽然VB6早就过时了，但是不得不说它是最简单实用的解决方案，没有之一。修改器的代码很多，网上随便找一个就能改造成XXX专用修改器了。

## 修改内存数据

修改内存数据的话，需要使用Windows API。核心函数就是WriteProcessMemory。

具体思路如下：

获取进程PID。比如寻找名为“th10.exe”的进程，或者通过FindWindow函数找到游戏窗口，再通过GetWindowThreadProcessId获取PID：

```vb
Dim hwnd As Long
Dim pid As Long

hwnd = FindWindow("BASE", vbNullString)
If hwnd = 0 Then Exit Sub

GetWindowThreadProcessId hwnd, pid
```

接下来进行写入：

```vb
Dim pHandle As Long
pHandle = OpenProcess(PROCESS_ALL_ACCESS, False, lppid)
WriteProcessMemory pHandle, ByVal 目标地址, ByVal VarPtr(目标值), 字节数, 0&
CloseHandle pHandle
```

如果写入多个字节，可以开个Byte数组（例如叫做Arr），然后传入ByVal VarPtr(Arr(0))。

当然，在实际操作过程中要搞清楚运行的到底是哪一款游戏。我个人是通过GetWindowText获取窗口标题栏文字，然后检查有没有英文关键词（例如风神录是“Mountain of Faith”）来判断游戏版本的。反正不会特意去玩体验版，所以不用管它了。

## 提权

直接用WriteProcessMemory是无法修改其他进程数据的。在修改之前，需要给进程提权。提权很简单，照抄现成代码就行：

```vb
Dim hToken As Long
Dim tmpLuid As LUID
Dim tkp As TOKEN_PRIVILEGES
Dim tkpNewButIgnored As TOKEN_PRIVILEGES
Dim lBufferNeeded As Long
OpenProcessToken GetCurrentProcess(), TOKEN_ALL_ACCESS, hToken
LookupPrivilegeValue "", "SeDebugPrivilege", tmpLuid
tkp.PrivilegeCount = 1
tkp.Privileges(0).pLuid = tmpLuid
tkp.Privileges(0).Attributes = SE_PRIVILEGE_ENABLED
AdjustTokenPrivileges hToken, False, tkp, Len(tkpNewButIgnored), tkpNewButIgnored, lBufferNeeded
```

不过最终的程序并不需要管理员权限。

## 寻找地址

即使要自己写修改器，金山游侠一类软件还是要用的，要不然怎样找到地址呢？

现在修改器用起来非常简单：刚开局残机数量为2，我们就搜索一下“2”；自杀，再搜索一下“1”；再自杀，搜索“0”；如果还有一大堆结果，那么就复活一下，继续搜索，直到只剩下一个搜索结果。最后留下来的这个结果就是残机数量——只管改数就行了。

# 直接改值

送给拿来主义者——其实自己用游侠跑几遍就出来了。如果没有特殊说明，数据均为十六进制，数据大小都是1字节。

 游戏   |版本    | 残机    | BOMB   | Power                          | 其他
--------|------|---------|--------|--------------------------------|------------
红魔乡  | 1.02  | 69D4BA  | 69D4BB | 69D4B0，最大0x80              |
风神录  | 1.00a | 474C70  |        | 474C48，示数除以0.05，最大0x64  |
地灵殿  | 1.00a | 4A5718  |        | 4A56E8，示数除以0.05，最大0x64<br>（魔理沙＋爱丽丝最大0xC8） |
星莲船  | 1.00b |4B0C98  | 4B0CA0 | 4B0C48（2字节），示数乘100，最大0x190 |
神灵庙  | 1.00c |4BE7F4  | 4BE800 | 4BE7E8（2字节），最大0x190     |
辉针城  | 1.00b |4F5864  | 4F5870 | 4F5858（2字节），最大0x190     |
绀珠传  | 1.00b |4E7450  | 4E745C | 4E7440（2字节），最大0x190     |

改Power的时候建议先改成最大值减去一个数，否则自机火力容易不正常。

如何想锁定残机的话，用一个Timer来反复修改，就能达到锁定的效果了。

# 改指令

深入地思考一下，既然能改残机数，为什么不直接通过修改程序来防止掉残机，或者干脆直接撞不到子弹呢？

怀着这样猥琐的目的，我草草地学了一下汇编语言。以前看机器码完全看不懂，借助几篇文章（见结尾“参考资料”），终于进步到看着头大的程度了。（说明教程作者具有*操纵看代码头疼程度的能力*。）

因为辉针城通关了（Easy不要鄙视我），所以就拿辉针城（版本1.00b）进行一下修改器的探索。其他大作的原理都一样。

{% callout info %}
#### 高手和拿来主义者

作为没学过汇编的初学者，我详细地记录了自己的探索过程。如果你是高手或者想直接找地址，可以直接找结尾的“参考资料”。
{% endcallout %}

## 残机数量不减

辉针城残机数量的地址是4F5864，首先用追踪功能（<s>新手嘛，用Game Master试的</s>还是OllyDbg便于装酷）找到写入该地址的代码。

{% asset_img 1.png %}

看到那个`dec eax`（EAX减1）了吗？直接改成90（NOP，空指令）试一下。

改完之后可以主动撞一下，果然残机数不减了。

## 无敌

无敌不是一下子就能追踪出来的，因此要有耐心（废话），多设置一些断点，观察设置断点与NOP前后游戏画面的变化（正经话）。

首先猜想一下，在撞子弹的一瞬间会发生什么事情。想不出来也没关系，在后面的探索过程中也要去总结：

1. 判定中弹
2. 播放中弹声音、自机失去控制、播放中弹动画、自机数量减一（顺序不确定）
3. 消弹
4. 恢复正常状态

中弹之后会处于短暂的无敌状态。在装弹的一瞬间一定会判定这个状态，因此可能要从判定方面下手。

首先定位到残机数量减一这里（下图）。

<span style="display:none;">` `</span>{% asset_img 2.png %}

减生命值的指令位于一小坨代码中。这小坨指令的第一条位于44F5E0。给44F5E0上断点，发现在Miss之后会经历一个很短暂的时间，然后才会触发断点。不过，这也可以说明这段代码确实与Miss有关。

将44F5E0处的指令改为C3（RET），发现还会Miss，但是不会播放中弹的动画效果，残机数量也不会减少了。

为了方便后面调试，先把44F5E0改回来，然后把44F617改成90（NOP），免得满身疮痍（Game Over）。

接下来追踪调用44F5E0的代码，找到了44DD91（下图的`call 0044F5E0`）。

<span style="display:none;">` `</span>{% asset_img 3.png %}

在这里，死亡已经是既定事实，所以需要继续往前追溯。在44DD84处（CMP）下断点，发现要做8次比较之后才会调用44F5E0。这就是经过一小段延迟之后才播放Miss效果、残机数量减一。

那么44DD84处的CMP是从哪里跳过来的呢？继续跟踪，找到了44DBF8（下图的JMP）。

{% asset_img 4.png %}

JMP的目标地址不是固定的，而是与EAX有关。这大概是个指向函数的指针吧。

在44DBE9处（MOV）下断点，观察EAX值和那个EDI+684的地址。经过反复尝试，可以发现，EDI+684的值是0D4906CC（备注：动态分配的空间，每次都不一样），里面存着主角的状态，大概是0（无）、1（正常/金身）、2（已经挂掉）、4（正在挂掉），而且在撞弹的一瞬间，这个地址的值会变成4。

因此可以做出一个假设：只要阻止这个地址变成4（的子程序），主角就不会撞弹了。

设置条件断点，一旦向0D4906CC写入数值就中断，结果找到了44F871（下图MOV）。

{% asset_img 5.png %}

这部分应该都是和死亡判定有关的了。定位到这坨代码的开头（44F7A0），直接改成C3（RET）。OK！

我的[灵梦](https://zh.moegirl.org/zh/%E5%8D%9A%E4%B8%BD%E7%81%B5%E6%A2%A6)再也不怕撞弹了……

## 自动捡道具

这个有点歪打正着了——全凭看[答案](http://cheater.seesaa.net/article/369899074.html)和碰运气。

先猜一下，大概应该从捡到Power道具开始，然后再慢慢回溯。按照猜想，首先定位到了Power增长（4390DD），发现开头是4390C0，寻找CALL，于是发现了：

{% asset_img 6.png %}

注意438B4A处的JMP，有点`switch () { ... }`的意思。应该是自机捡到了一个道具，然后判断道具种类，然后给予不同的奖励。

往上看438B3E（MOV），这条语句说明道具种类就存在[EDI+0BF4]里面，因此处理道具的时候也一定会碰到这个地址。开启高亮功能，往前翻，直到找到另一个[EDI+0BF4]为止：

{% asset_img 7.png %}

设置断点，继续<del>泡妹子</del>打游戏，发现当道具离自机有一定距离时就会触发43897E，直到接触到道具才会触发438B3E。在438B3E前面有几个JA（下图），如果距离不够就直接跳出去了：

{% asset_img 8.png %}

这时我开始听天由命，胡乱搞了——如果能随时触发43897E处的代码，离自动捡道具不就近了一步嘛。为什么会这样想呢？不知道，反正就这样干了——至少离“参考答案”又近了一步。

注意上图底下有个“Jump from 438838”，就是这个样子：

{% asset_img 9.png %}

直接把“0F84”改成“2EE9”（JMP）会怎样呢？没反应。

再回到43897E处，发现438965也是JMP们的目标地址（438965~43897E之间没有跳转了，肯定是一块儿的）：

{% asset_img 10.png %}

啥也别说了，直接用排除法，挨个定位，把条件跳转都改成直接跳转JMP，然后回到游戏看看到底发生了什么变化：

{% asset_img 11.png %}

结果出人意料，居然自动捡道具了。

果然是歪打正着。我改的是438689，“参考答案”改的是4386B0，也不知道我会搞出什么副作用（补充：没有副作用——怎么改都能跳到438965那儿），毕竟我只是草草地看了一遍汇编语言教材。

话说回来，这回该让我的[魔理沙](https://zh.moegirl.org/zh/%E9%9B%BE%E9%9B%A8%E9%AD%94%E7%90%86%E6%B2%99)出场了吧……

# 总结

本文本来是要讲“如何写作弊器”来着，结果写成了“如何寻找作弊码”……

为了赶紧投入到萝莉们的怀抱中，我决定，直接下载一个现成的作弊器。

{% asset_img boring.jpg %}

東方有毒啊！

# 参考资料

* [東方改造: Nice cheat.](http://cheater.seesaa.net/category/9478192-1.html)
    * [东方绀珠传作弊](http://cheater.seesaa.net/article/169529488.html)
* [永夜抄自机、bomb、power内存地址](http://tieba.baidu.com/p/1271755034)
* [关于妖妖梦作弊.......](http://tieba.baidu.com/p/1270485699)
