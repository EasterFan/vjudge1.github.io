---
layout: post
title: "自己动手写東方Project作弊器（三）（未完待续）"
author: vjudge1
categories: 游戏
tags: 東方Project 反汇编
---
* contents
{:toc}

東方Project还有若干格斗游戏，主要由黄昏边境开发。作为有官方设定的歪作，当然也应该通通关。

虽然黄昏的画风不错，可是，这样一个全是萝莉的格斗游戏居然没有格斗游戏应有的功能<span class="blackout">例如乳摇和爆乳</span>（没法和[DOA](http://cn.uncyclopedia.wikia.com/wiki/DOA)相比），更过分的是，双方根本就是**8比特的马赛克小人**！所以说，给东方的格斗游戏写个作弊器/修改器也是理所应当的了（坏笑）。

作弊作到什么程度呢？来个最缺德的——自己不死，对方一击毙命。<span class="blackout">没乳摇还玩啥嘛。</span>




{% callout %}
#### 未完待续

东方的游戏多到[连吉尼斯都有纪录的程度](https://web.archive.org/web/20130424041751/http://www.guinnessworldrecords.com/records-8000/most-prolific-fan-made-shooter-series/)了，而且格斗类游戏似乎搜不到现成的作弊码……我只能慢慢更新了Orz。
{% endcallout %}

# 东方萃梦想
（版本：1.11）

研究萃梦想的作弊（说好听点叫修改），首先得去打游戏。我个人打不好东方的格斗游戏，怎么办呢？经过试验，发现剧情模式和双人模式的地址都是一样的（废话），所以直接开双人就行。

人数地址是固定的，在剧情模式里挨几顿打就能搜出来了（671622）。写这个地址的指令位于43CD5D，改写成三个90，就不会GAME OVER了。

血槽地址是动态的，每打一架都会变化，而且双方都变，所以搜索要一气呵成（使用模糊搜索，大概需要搜八九次）。满血是10000。搜到地址之后马上定位，可以找到三个地址：44365C（自己和对手掉血，血的偏移量是324，短的那部分——我不懂格斗类游戏的术语，别笑话我）、4436EB（自己和对手掉<del>血</del>应该是体力吧，长的那部分，数据地址偏移量是326）、4425FE（自己的，和血量同步，数据地址偏移量328）。

{% callout %}
#### 补充

能够改变血量的地址还有443E19（偏移量324）、452879（偏移量324，保证血量不大于体力值）、444BD5（偏移量324，发动符卡之后）、444C0D（偏移量328，发动符卡之后）、444D16（偏移量328，发动符卡之后）等。精力有限所以没挨个研究具体作用。
{% endcallout %}

值得注意的是，自己和对手掉血的指令是同一个指令，因此不能直接NOP或者直接MOV成0。为了省事儿，先把4436EB、4425FE和443E19给NOP掉（均改为7个90），专门研究血量。

注意443657处的SUB，将其改为`2B C9`（`sub ecx, ecx`，直接归零）后，对方就可以被一拳头打趴下了。但是，自己也会被对方一拳打趴下。因此还要设法分清敌我。

![]({{ site.baseurl }}/img/2016-08-20-touhou-3/th75.png)

为了接下来的调试，443657还得改回来。在此处下断点，发现只有EAX寄存器的值有区别（ECX、EDX分别是血量和血量变化，不用管）。EAX取自`[ebp+10]`，而双方挨打时EBP均为19FA04。

一开始我的思路是关注堆栈的变化情况，虽然找得很辛苦，但是没有任何成效。

后来重新思考一下——既然有`mov eax, [ebp+10]`，还有一个`[eax+324]`，那么这不就是个指针吗？因此，换用游戏修改器，搜索一下指针所指的内存地址（当然两个角色的`[ebp+10]`所保存的值得记下来，然后马上搜，要不然只要重新开一盘内容就变了），于是发现了指针本身所处地址——1P是671418，2P是67141C。

现在的问题就变成了：如何在扣血之前将双方的地址分辨出来，分别处理——一不做二不休直接把对方打死？

## 思路一

后者比较简单，先尝试一下，不过修改完发现有个bug就是对方打自己之后双方就无法继续打下去了，因此还得选择前者。

从44365C往前改，重新编一段新代码。从443645开始，改成：

```nasm
;地址    汇编指令                      机器码
443645: nop                         ;90
443646: nop                         ;90
443647: nop                         ;90
443648: nop                         ;90
443649: mov ecx, [ebp+10]           ;8B 4D 10
44364C: cmp ecx, [671418]           ;3B 0D 18 14 67 00
443652: je 443663                   ;74 0F
443654: sub ecx, ecx                ;29 C9
443656: mov edx, [67141C]           ;8B 15 1C 14 67 00
44365C: mov word ptr [edx+324], cx  ;66 89 8A 24 03 00 00，保持不变
```

这样改仍然有可能掉血，经过观察和追踪可以发现，血量一定不大于体力值，这是由452879处的指令来控制的（下图）。NOP掉（改写成7个90）之后自己就不会再掉血了。

![]({{ site.baseurl }}/img/2016-08-20-touhou-3/th75_2.png)

在对手发动符卡的时候，44365C处的指令并不起作用，因此还得找到在符卡战中掉血的指令，继续编程。

通过搜索和跟踪发现，发动符卡的时候，掉血的指令位于444BD0。新代码本来应该和上面差不多，不过留出来的字节数不够，只好略去CMP，直接把对方打趴下（不知道会有什么副作用）。

![]({{ site.baseurl }}/img/2016-08-20-touhou-3/th75_3.png)

这次从444BC9开始：

```nasm
;地址    汇编指令                      机器码
444BC9: nop                         ;90
444BCA: nop                         ;90
444BCB: nop                         ;90
444BCC: nop                         ;90
444BCD: sub edx, edx                ;29 D2
444BCF: mov eax, [67141C]           ;8B 05 1C 14 67 00
444BC5: mov word ptr [eax+324], dx  ;66 89 90 24 03 00 00，本行不变
```

经过试验，只要把上面两个重新编程的地方改一下，然后在452879处写入7个90，就可以吊打小女生了。

## 思路二（推荐）

在改绯想天时，我想到了另一个思路。既然前面提到`call 00455640`是计算血量变化值的，那么我们也可以这样玩——自己掉血时直接返回0，对手掉血时有多少血就返回多少。

观察443645附近的指令，可以发现，CALL完之后变化量存在了AX里面，所以……

```nasm
;地址   汇编指令                         机器码
455640: push edx                       ; 52
455641: mov edx, dword ptr [ebp+10]    ; 8B 55 10
455644: movsx eax, word ptr [edx+324]  ; 0F BF 82 24 03 00 00
45564B: mov edx, dword ptr [67141C]    ; 8B 15 1C 14 67 00
455651: cmp edx, dword ptr [ebp+10]    ; 3B 55 10
455654: je short 00455658              ; 74 02
455656: sub eax, eax                   ; 29 C0
455658: pop edx                        ; 5A
455659: retn                           ; C3
; 后面不用管了
```

然后到444BC4（`sar eax, 1`）改一下，把它NOP掉（`90 90`），否则符卡战没法把血放光。

这样改就可以了，而且比思路一好多了。

我可怜的小[萃香](https://zh.moegirl.org/%E4%BC%8A%E5%90%B9%E8%90%83%E9%A6%99)啊TAT。

# 东方绯想天
版本：1.06

按照相同的思路来研究绯想天的作弊。

萃梦想的那个指针（角色状态信息的基准地址）是静态的，而绯想天是动态的，很坑。

一开始还是搜血条，找到了5个地址，不过只有一个是主动改变的，其他都是被动改变的，只要挨个改一下就能试出来。对那个主动的进行跟踪，就定位到了46BAF1处的指令（`sub word ptr [esi+174], bx`），最终应该是对它和另外一处地址（符卡战）下手。不过后面实际上对BX下手了。

注意到`[esi+174]`之后继续用修改器搜索esi的值，会找到一串子地址，返回角色选单（千万不要手贱点“X”关闭了）、开打、再返回再开打就可以筛掉一部分。在返回主菜单一瞬间，数值最先变成0的那个地址就是指针所处的地址。

但指针本身也是动态的，因此要对指针所处地址的写入进行跟踪（在进入游戏的一瞬间会被写入）。这样就定位到了4635B6（`mov dword ptr [ebx+eax*4+28], esi`）。下断点，可以发现，EAX是0或1，而EBX的值（通过搜索发现它）来自6E623C。

因此，1P的血量就相当于`[[[6E623C]+0+28]+174]`，2P的血量就相当于`[[[6E623C]+4+28]+174]`。用C语言表示，就相当于：

```c
#define ushort unsigned short
ushort ***base = (ushort***) 0x6E623C;
ushort **p1 = (*base) + 0 + 10,   // 10=0x28/sizeof(ushort*)=0x28/4
       **p2 = (*base) + 1 + 10;
ushort *life1, *life2;

if (*p1 != NULL && *p2 != NULL)
{
    life1 = *p1 + 186;            // 186=0x174/sizeof(ushort)=0x174/2
    life2 = *p2 + 186;
    // 血量是 *life1 和 *life2
    *life2 -= *life2;             // 缺德
}
else
{
    // 没开打
}
```

因为地址的计算比较复杂，自己写指令会占非常多的字节，所以可以考虑专门找个CALL来改造一下。注意46BAF1指令中的减数是BX，所以往前找写入BX的指令，即46B9AC（`movzx ebx, ax`）。通过下断点，发现AX的值是由前一条指令`call 0045AAE0`算出来的，于是……

```nasm
;地址    汇编指令                        机器码
45AAE0: push ecx                     ; 51
45AAE1: mov ecx, dword ptr [6E623C]  ; 8B 0D 3C 62 6E 00
45AAE7: add ecx, 2C                  ; 83 C1 2C
45AAEA: mov eax, [esi+174]           ; 8B 86 74 01 00 00
45AAF0: cmp esi, [ecx]               ; 3B 31
45AAF2: je 0045AAF6                  ; 74 02
45AAF4: sub eax, eax                 ; 29 C0
45AAF6: pop ecx                      ; 59
45AAF7: retn                         ; C3
```

于是我的[天子](https://zh.moegirl.org/比那名居天子)被我的[灵梦](https://zh.moegirl.org/博丽灵梦)打成孙子了Orz。

# 东方非想天则
版本：1.10（beta）

非想天则的作弊和绯想天一模一样，我就直接贴结果了。

掉血的指令位于47A72C（`sub word ptr [esi+184], bx`）。写地址的指令位于46D5BA（`mov dword ptr [ebx+eax*4+28], esi`），EBX的值源于8855BC，所以

```nasm
;地址   汇编指令                       机器码
464240: push ecx                     ; 51
464241: mov ecx, dword ptr [8855BC]  ; 8B 0D BC 55 88 00
464247: add ecx, 2C                  ; 83 C1 2C
46424A: mov eax, [esi+184]           ; 8B 86 84 01 00 00
464250: cmp esi, [ecx]               ; 3B 31
464252: je 00464256                  ; 74 02
464254: sub eax, eax                 ; 29 C0
464256: pop ecx                      ; 59
464257: retn                         ; C3
```

真是像非想天则（人偶）那样不需要思考了。

# 东方心绮楼（未完待续）

# 东方深秘录（未完待续）

# 补充说明

如果想直接改EXE文件的话，文件内的偏移量就是我们所需要的偏移量减去400000，例如想在412345处写入90，那么就可以找个十六进制编辑器，在12345处写个90。
